<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Node.js on Ovieh Mosley</title>
    <link>https://ovieh.com/tags/node.js/</link>
    <description>Recent content in Node.js on Ovieh Mosley</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 03 Dec 2017 15:15:40 -0500</lastBuildDate>
    
	<atom:link href="https://ovieh.com/tags/node.js/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Week Fifthteen</title>
      <link>https://ovieh.com/post/week-fifthteen/</link>
      <pubDate>Sun, 03 Dec 2017 15:15:40 -0500</pubDate>
      
      <guid>https://ovieh.com/post/week-fifthteen/</guid>
      <description>This was a short week in terms of new material, as it was running concurrently with the planning of our second group project. We build off the knowledge we gained last week in building our own ORM, and used an off the shelf model, Sequelize. I found Sequelize itself to be pretty easy to use, since it is promise based. Dealing with callbacks can get messy. Our project this week was merely to refactor last week&amp;rsquo;s project, were we created are own ORM, using Sequelize.</description>
    </item>
    
    <item>
      <title>Week Fourteen</title>
      <link>https://ovieh.com/post/week-fourteen/</link>
      <pubDate>Sun, 26 Nov 2017 10:20:22 -0500</pubDate>
      
      <guid>https://ovieh.com/post/week-fourteen/</guid>
      <description>This week we dove deeper into Express and covered Handlebars.js, a html templating engine. HTML templating provides a bridge between our JavaScript and our content, allowing us to decouple our HTML structure of the data within. Handlebars provides pretty easy to understand syntax and even allows block expression. As an example, let say I had list of burgers I want to iterate through and add each burger as a list item, it would look like this:</description>
    </item>
    
    <item>
      <title>Week Thirteen</title>
      <link>https://ovieh.com/post/week-thirteen/</link>
      <pubDate>Mon, 20 Nov 2017 13:29:51 -0500</pubDate>
      
      <guid>https://ovieh.com/post/week-thirteen/</guid>
      <description>We are starting to put it all together. Our project this week was to create a friend recommendation app not dissimilar from Tinder. It is almost a full-stack app, it doesn’t quite have data persistence through a database. Class is starting to get complicated, but when you step back and think about things, the concepts make more sense. When you are running a web server, it makes perfect sense that your server won’t serve something it has no idea about, such as static files, unless you explicitly do so.</description>
    </item>
    
    <item>
      <title>Week Twelve</title>
      <link>https://ovieh.com/post/week-twelve/</link>
      <pubDate>Sat, 11 Nov 2017 21:47:12 -0500</pubDate>
      
      <guid>https://ovieh.com/post/week-twelve/</guid>
      <description>This last week I became reaquainted with MySQL. It’s not so bad. The syntax is relatively straightforward. The keywords are close to to natural language. This was another week getting familiar with the power of Node.js. It is really easy to integrate some really powerful tools.
Our assignment this week was to create backend for store using MySQL running on Node.js.Working with MySQL was pretty straightforward, updating, selecting from, and inserting into the database.</description>
    </item>
    
    <item>
      <title>Week Eleven</title>
      <link>https://ovieh.com/post/week-eleven/</link>
      <pubDate>Wed, 01 Nov 2017 16:02:48 -0400</pubDate>
      
      <guid>https://ovieh.com/post/week-eleven/</guid>
      <description>This week was surprisingly challenging. What makes this program interesting is that we often are giving just enough tools to complete assignment. The examples we covered in class were not as complex as the assignment turned out to be. Albeit, it could be me overcomplicating things. I tried to abstract this project as completely as possible. I also tried to cover every edge case, every error.
This weeks project was a bit of remix.</description>
    </item>
    
    <item>
      <title>Week Ten</title>
      <link>https://ovieh.com/post/week-ten/</link>
      <pubDate>Mon, 23 Oct 2017 13:44:54 -0400</pubDate>
      
      <guid>https://ovieh.com/post/week-ten/</guid>
      <description>This has been my favorite week of learning yet. This was our introduction to Node.js, which is a JavaScript runtime engine. What that all means is that it allow us to use JavaScript outside of the browser. That opens up doors. Prior to Node.js developers had to learn a second language for the backend, such as PHP or Java. Now, no need. With just one language a developer can handle the tasks of both the front and backend of the stack.</description>
    </item>
    
  </channel>
</rss>