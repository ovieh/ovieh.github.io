<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ovieh Mosley</title>
    <link>https://ovieh.com/</link>
    <description>Recent content on Ovieh Mosley</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 13 May 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://ovieh.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hooks &amp; More!</title>
      <link>https://ovieh.com/post/hooks/</link>
      <pubDate>Mon, 13 May 2019 00:00:00 +0000</pubDate>
      <guid>https://ovieh.com/post/hooks/</guid>
      <description>&lt;p&gt;I decided to create a &lt;!-- raw HTML omitted --&gt;project&lt;!-- raw HTML omitted --&gt; to familiarize myself with some newer additions to React. I built upon a previous full stack web app I created that uses Handlebars for the view layer. This new app uses some new features in React, such as Hooks and Concurrent React. The app scrapes the New York Times Technology page and displays a list of articles to user. It also allows the user to save articles and to comment on those articles. The backed uses MongoDB and Mongoose as ORM.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Final Project</title>
      <link>https://ovieh.com/post/final-project/</link>
      <pubDate>Mon, 26 Feb 2018 16:28:51 -0500</pubDate>
      <guid>https://ovieh.com/post/final-project/</guid>
      <description>&lt;p&gt;The remaining three weeks of class were mainly devoted to the development of our final projects. In that time we we also covered React in more depth and went over some some Computer Science fundamental, data structure and algorithms.&lt;/p&gt;&#xA;&lt;p&gt;I am not quite sure why I am so fond of React. Perhaps it feels like it gives needed structure to the front-end. And adding even more structure, we covered Redux. &lt;a href=&#34;https://redux.js.org/&#34;&gt;Redux&lt;/a&gt; provides a predictable state container for JavaScript apps. What that means is that handles the state for your entire application, it provides a &lt;em&gt;single source of truth&lt;/em&gt;. For something that is relatively simple, it is difficult to grasp exactly why you would need or want to use Redux. Through abstraction it provides predictable methods of accessing and modifying state. I would go on to use it along with React in my group’s final project.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Week Twenty</title>
      <link>https://ovieh.com/post/week-twenty/</link>
      <pubDate>Tue, 23 Jan 2018 14:41:23 -0500</pubDate>
      <guid>https://ovieh.com/post/week-twenty/</guid>
      <description>&lt;p&gt;This was our second week of covering React and one of our final weeks of learning new content. We covered the stuff necessary in making more featureful Single-Page Applications, AJAX calls, conditional rendering, and the use of React Router. As this was the final week before we began working on our Final Projects, the homework this week was optional. I am really glad I choose take it on.&lt;/p&gt;&#xA;&lt;p&gt;The previous week’s homework was considerably trivial use of React compared to this weeks. Going through the awesome &lt;a href=&#34;https://reactjs.org/&#34;&gt;Reactjs Docs&lt;/a&gt;, as a class, we pretty much covered everything that is in the Getting Started section. And it is pretty interesting that that is essentially it for React functionality.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Week Nineteen</title>
      <link>https://ovieh.com/post/week-nineteen/</link>
      <pubDate>Mon, 15 Jan 2018 16:27:56 -0500</pubDate>
      <guid>https://ovieh.com/post/week-nineteen/</guid>
      <description>&lt;p&gt;So this is where the fun started. React is such joy to work with. Having &lt;em&gt;once source for truth&lt;/em&gt; makes a lot sense. I have been picking up ES6 &amp;amp; ES7 features for a while now, and now its interesting seeing things like object destruturing and spread and rest used in a library. I really was not having much fun working on the front end, until now. I guess its the way that problems are approached, from Reacts perspective. And there&amp;rsquo;s something about keeping keeping a component&amp;rsquo;s markup, css, and logic in one place that I find really appealing. I can&amp;rsquo;t say exactly why.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Week Eighteen</title>
      <link>https://ovieh.com/post/week-eighteen/</link>
      <pubDate>Mon, 08 Jan 2018 11:57:51 -0500</pubDate>
      <guid>https://ovieh.com/post/week-eighteen/</guid>
      <description>&lt;p&gt;This week we added another tool to our toolbox, &lt;a href=&#34;https://www.mongodb.com/&#34;&gt;MongoDB&lt;/a&gt;. And unlike MySQL, it does not care what you put in to it. It just accepts the data. Which is a blessing and a curse. To remedy this, there exists a project called &lt;a href=&#34;http://mongoosejs.com/&#34;&gt;Mongoose&lt;/a&gt;. Mongoose provides a MondoDB database with an ORM, which allows for validation. Since we previously learned Firebase, it was relatively easy to pick up Mongo. We just had to learn how to implement it with Node.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Weeks Sixteen &amp; Seventeen</title>
      <link>https://ovieh.com/post/week-sixteen-seventeen/</link>
      <pubDate>Wed, 20 Dec 2017 16:19:34 -0500</pubDate>
      <guid>https://ovieh.com/post/week-sixteen-seventeen/</guid>
      <description>&lt;p&gt;It has been a challenging last couple of weeks. We concurrently covered testing, both unit and functional, and completed our second group project. One of the toughest aspects of our group project is simply coming up with an idea for an application. We kicked around a few ideas, but eventually led drawing game, kind of like Pictionary, where one player has a clue and other player must guess what the drawer is, &lt;em&gt;drawing&lt;/em&gt;. We came across WebSockets, which allows for peer to peer communication between over TCP. This would allow us to share what the person is drawing on their Canvas. We used Socket.io, which implements WebSockets and ties in nicely with Node. Also using Socket.io, I implemented a chat function, which was also used as a method the messages that control the functions of the game.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Week Fifthteen</title>
      <link>https://ovieh.com/post/week-fifthteen/</link>
      <pubDate>Sun, 03 Dec 2017 15:15:40 -0500</pubDate>
      <guid>https://ovieh.com/post/week-fifthteen/</guid>
      <description>&lt;p&gt;This was a short week in terms of new material, as it was running concurrently with the planning of our second group project. We build off the knowledge we gained last week in building our own ORM, and used an off the shelf model, &lt;!-- raw HTML omitted --&gt;Sequelize&lt;!-- raw HTML omitted --&gt;. I found Sequelize itself to be pretty easy to use, since it is promise based. Dealing with callbacks can get messy. Our project this week was merely to refactor last week&amp;rsquo;s project, were we created are own ORM, using Sequelize.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Week Fourteen</title>
      <link>https://ovieh.com/post/week-fourteen/</link>
      <pubDate>Sun, 26 Nov 2017 10:20:22 -0500</pubDate>
      <guid>https://ovieh.com/post/week-fourteen/</guid>
      <description>&lt;p&gt;This week we dove deeper into Express and covered &lt;!-- raw HTML omitted --&gt;Handlebars.js&lt;!-- raw HTML omitted --&gt;, a html templating engine. HTML templating provides a bridge between our JavaScript and our content, allowing us to decouple our HTML structure of the data within. Handlebars provides pretty easy to understand syntax and even allows block expression. As an example, let say I had list of burgers I want to iterate through and add each burger as a list item, it would look like this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Week Thirteen</title>
      <link>https://ovieh.com/post/week-thirteen/</link>
      <pubDate>Mon, 20 Nov 2017 13:29:51 -0500</pubDate>
      <guid>https://ovieh.com/post/week-thirteen/</guid>
      <description>&lt;p&gt;We are starting to put it all together. Our project this week was to create a friend recommendation app not dissimilar from Tinder. It is &lt;em&gt;almost&lt;/em&gt; a full-stack app, it doesn’t quite have data persistence through a database. Class is starting to get complicated, but when you step back and think about things, the concepts make more sense. When you are running a web server, it makes perfect sense that your server won’t serve something it has no idea about, such as static files, unless you explicitly do so. We had been using Github Pages, which is perfectly fine for serving static sites and does all of the heavy lifting in terms of hosting a site. Setting up route with Express.js is actually pretty simple. And for our assignment, we also set up a rudimentary API to store and access data locally.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Week Twelve</title>
      <link>https://ovieh.com/post/week-twelve/</link>
      <pubDate>Sat, 11 Nov 2017 21:47:12 -0500</pubDate>
      <guid>https://ovieh.com/post/week-twelve/</guid>
      <description>&lt;p&gt;This last week I became reaquainted with MySQL. It’s not so bad. The syntax is relatively straightforward. The keywords are close to to natural language. This was another week getting familiar with the power of Node.js. It is really easy to integrate some really powerful tools.&lt;/p&gt;&#xA;&lt;p&gt;Our assignment this week was to create backend for store using MySQL running on Node.js.Working with MySQL was pretty straightforward, updating, selecting from, and inserting into the database. The challenge I faced this week was dealing with asynchronous JavaScript. I found some of my function calls would sort of get take effect at the same time, or at some unforeseen time. I dealt with this my implementing callbacks. I am going to look into other ways of tackling this problem. The new hotness in ES7 is Async / Await, which offers solutions with asynchronous code. Async actually implements Promises, which was the last great hope with dealing with funny timing. So before I tackle async / await, I need to get a handle on promises.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Projects</title>
      <link>https://ovieh.com/page/projects/</link>
      <pubDate>Thu, 02 Nov 2017 08:46:56 -0400</pubDate>
      <guid>https://ovieh.com/page/projects/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xA;&lt;html lang=&#34;en&#34;&gt;&#xA;&lt;head&gt;&#xA;  &lt;meta charset=&#34;UTF-8&#34;&gt;&#xA;  &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;&#xA;  &lt;meta http-equiv=&#34;X-UA-Compatible&#34; content=&#34;ie=edge&#34;&gt;&#xA;  &lt;title&gt;Document&lt;/title&gt;&#xA;&lt;/head&gt;&#xA;&lt;body&gt;&#xA;  &lt;div class=&#34;row&#34;&gt;&#xA;    &lt;div class=&#34;col-lg-6 portfolio-item&#34;&gt;&#xA;      &lt;div class=&#34;card h-100&#34;&gt;&#xA;        &lt;a href=&#34;https://feel-to-reel.firebaseapp.com/&#34;&gt;&lt;img class=&#34;card-img-top&#34; src=&#34;https://ovieh.com/img/feel-to-reel.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&#xA;        &lt;div class=&#34;card-body&#34;&gt;&#xA;          &lt;h4 class=&#34;card-title&#34;&gt;&#xA;            &lt;a href=&#34;https://feel-to-reel.firebaseapp.com/&#34; target=&#34;_blank&#34;&gt;Feel to Reel&lt;/a&gt;&#xA;          &lt;/h4&gt;&#xA;          &lt;p class=&#34;card-text&#34;&gt;A movie recommendation app that uses an image from the user&#39;s webcam and Azure&#39;s Emotion API to deliver emotionally specific movie recommendations. &lt;a href=&#34;https://feel-to-reel.firebaseapp.com/&#34; target=&#34;_blank&#34;&gt;Live&lt;/a&gt; &lt;a href=&#34;https://github.com/ovieh/Feel-to-Reel&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt; &lt;/p&gt;&#xA;        &lt;/div&gt;&#xA;      &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;    &lt;div class=&#34;col-lg-6 portfolio-item&#34;&gt;&#xA;      &lt;div class=&#34;card h-100&#34;&gt;&#xA;        &lt;a href=&#34;https://codenector.herokuapp.com/&#34;&gt;&lt;img class=&#34;card-img-top&#34; src=&#34;https://ovieh.com/img/codenector.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&#xA;        &lt;div class=&#34;card-body&#34;&gt;&#xA;          &lt;h4 class=&#34;card-title&#34;&gt;&#xA;            &lt;a href=&#34;https://codenector.herokuapp.com/&#34; target=&#34;_blank&#34;&gt;CodeNector&lt;/a&gt;&#xA;          &lt;/h4&gt;&#xA;          &lt;p class=&#34;card-text&#34;&gt;A Pair Programming App utilzing React, Redux, &amp; Socket.io. It allows multiple users to share the same JavaScript development environment and for the safe execution of code in the browser. &lt;a href=&#34;https://codenector.herokuapp.com/&#34; target=&#34;_blank&#34;&gt;Live&lt;/a&gt; &lt;a href=&#34;https://github.com/CodeNector/CodeNector&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt; &lt;/p&gt;&#xA;        &lt;/div&gt;&#xA;      &lt;/div&gt;&#xA;    &lt;/div&gt;&#xA;    &lt;div class=&#34;col-lg-6 portfolio-item&#34;&gt;&#xA;      &lt;div class=&#34;card h-100&#34;&gt;&#xA;        &lt;a href=&#34;https://devouraburger.herokuapp.com/&#34;&gt;&lt;img class=&#34;card-img-top&#34; src=&#34;https://ovieh.com/img/devour-a-burger.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&#xA;        &lt;div class=&#34;card-body&#34;&gt;&#xA;          &lt;h4 class=&#34;card-title&#34;&gt;&#xA;            &lt;a href=&#34;https://devouraburger.herokuapp.com/&#34;&gt;Devour a Burger&lt;/a&gt;&#xA;          &lt;/h4&gt;&#xA;          &lt;p class=&#34;card-text&#34;&gt;This is Burger logger using Node.js, MySQL, Express, Handlebars, and a homemade ORM. &lt;a href=&#34;https://devouraburger.herokuapp.com/&#34; target=&#34;_blank&#34;&gt;Live&lt;/a&gt; &lt;a href=&#34;https://github.com/ovieh/burger&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Week Eleven</title>
      <link>https://ovieh.com/post/week-eleven/</link>
      <pubDate>Wed, 01 Nov 2017 16:02:48 -0400</pubDate>
      <guid>https://ovieh.com/post/week-eleven/</guid>
      <description>&lt;p&gt;This week was surprisingly challenging. What makes this program interesting is that we often are giving just enough tools to complete assignment. The examples we covered in class were not as complex as the assignment turned out to be. Albeit, it could be me overcomplicating things. I tried to abstract this project as completely as possible. I also tried to cover every edge case, every error.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/xDQ3Oql1BN54c/giphy.gif&#34; alt=&#34;confused&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;This weeks project was a bit of remix. Our third week project was to produce a Hangman game in Javascript, using the browser for user input. This week, we did the same, only using Node.js. We were also to include constructors. My first roadblock came early on, trying to change an array in a different class. It took me a day of thinking, but I realized that I should not try and change the value of an array, just change the value of a reference to that array. Side-efects.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Week Ten</title>
      <link>https://ovieh.com/post/week-ten/</link>
      <pubDate>Mon, 23 Oct 2017 13:44:54 -0400</pubDate>
      <guid>https://ovieh.com/post/week-ten/</guid>
      <description>&lt;p&gt;This has been my favorite week of learning yet. This was our introduction to &lt;!-- raw HTML omitted --&gt;Node.js&lt;!-- raw HTML omitted --&gt;, which is a JavaScript runtime engine. What that all means is that it allow us to use JavaScript outside of the browser. That opens up doors.&#xA;&lt;img src=&#34;https://media.giphy.com/media/xjqNH3Bml1gTC/giphy.gif&#34; alt=&#34;Obama Kicking Open Door!&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Prior to Node.js developers had to learn a second language for the backend, such as PHP or Java. Now, no need. With just one language a developer can handle the tasks of both the front and backend of the stack.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Weeks Eight &amp; Nine</title>
      <link>https://ovieh.com/post/week8and9/</link>
      <pubDate>Sun, 15 Oct 2017 21:17:05 -0400</pubDate>
      <guid>https://ovieh.com/post/week8and9/</guid>
      <description>&lt;p&gt;The  last couple of weeks were spent working on our first group project. It was quite the learning experience. The first obstacle was to figure out what exactly we should do for a project. I first suggested a music based food recommendation app. That really did not go anywhere. It’s not a terrible idea. We eventually landed on an app that would give you movie recommendations based on your facial expression.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Quotation</title>
      <link>https://ovieh.com/post/quotation/</link>
      <pubDate>Wed, 04 Oct 2017 16:11:20 -0400</pubDate>
      <guid>https://ovieh.com/post/quotation/</guid>
      <description>&lt;p&gt;I use Hugo to generate html for site. I have been using Google Docs to draft posts, to take advantage of spell check. What I did not realize, is that the quotation marks that are used in word processing programs and quotation marks used in html are &lt;em&gt;not&lt;/em&gt; the same. This lead to to dead links in previous two posts. Live and learn.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Week Seven</title>
      <link>https://ovieh.com/post/week-seven/</link>
      <pubDate>Mon, 02 Oct 2017 18:07:57 -0400</pubDate>
      <guid>https://ovieh.com/post/week-seven/</guid>
      <description>&lt;p&gt;Until now our programs only cared about the &lt;em&gt;now&lt;/em&gt;, they only lived in the &lt;em&gt;moment&lt;/em&gt;. This week we learned ways of giving our software something that dogs do not have, object permanence. We covered three ways of storing data with Javascript just using what’s in the browser; HTML5 Web Storage as well touching on Cookies. On the third day we covered the use of a Google product, &lt;!-- raw HTML omitted --&gt;Firebase&lt;!-- raw HTML omitted --&gt;. The database feature from Firebase includes a couple of really useful features, namely, in our use at least, a method that listens to changes in the database and call a function. This can really simplify the number of functions that are needed to be created.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Week Six</title>
      <link>https://ovieh.com/post/week-six/</link>
      <pubDate>Wed, 27 Sep 2017 15:29:58 -0400</pubDate>
      <guid>https://ovieh.com/post/week-six/</guid>
      <description>&lt;p&gt;This week we learned ways of accessing tools and data not of our creation through APIs, or Application Programming Interfaces. This is a pretty important step in our learning progression, since no man is an island, it is fundamental to learn to leverage the work of others. I think the most important lesson I learned this week was importance of reading documentation. When I think about it, I have always enjoyed reading instructions. As I child, when i got any toy that required assembly, half the fun was learning how to put the thing together. Now I get to find job in assembling disparate pieces of software.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Week Five</title>
      <link>https://ovieh.com/post/week-five/</link>
      <pubDate>Wed, 20 Sep 2017 16:22:24 -0400</pubDate>
      <guid>https://ovieh.com/post/week-five/</guid>
      <description>&lt;p&gt;Not a ton of new content was covered this week. The first day we had a Javascript review, where we went over previous content with the lens of what we know now. I did not get much of this day, since everything we  have learned is still fresh. The second day we covered Javascript Timing Events. What we learned that day was enough for us to tackle our week five homework. The goal was to create a trivia game where the user has a limited amount of time to answer the question before the game moved on to the next question.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Week Four</title>
      <link>https://ovieh.com/post/week-four/</link>
      <pubDate>Sat, 09 Sep 2017 09:55:17 -0400</pubDate>
      <guid>https://ovieh.com/post/week-four/</guid>
      <description>&lt;p&gt;This was probably my favorite week yet. Some of the concepts are starting to stick, my ability to think programmatically is improving. We went into Javascript and jQuery a little more in depth. The concept of scope was covered extensively. My prior experience helped out immensely.&lt;/p&gt;&#xA;&lt;p&gt;And to get into my prior experience. My first formal introduction into programming while we had a Clinton in the White House. Things were rosy. There was a Dot Com boom. Geocities were a thing. In Ms. Futch’s class we learned Microsoft Visual Basic. I was always adept at following instructions and understanding what makes instructions clear, so inputting instructions into a computer felt natural to me. Our programming teacher had no programming experience, and as the course went on, I began helping my fellow students out with our work more and more. It all seemed so simple to me. Maybe it had something to do with the simple nature of Visual Basic. Dragging and Dropping UI elements around and assigning simple logic.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Week Three</title>
      <link>https://ovieh.com/post/week-three/</link>
      <pubDate>Sat, 02 Sep 2017 16:58:20 -0400</pubDate>
      <guid>https://ovieh.com/post/week-three/</guid>
      <description>&lt;p&gt;This week was spent getting acquainted with Javascript. Which is a scripting language that adds functionality to websites. It can be used to manipulate the page itself, such as adding elements, text, images. It can also be used to to do nitty-gritty things, like math. I do have a good amount of experience with programming languages, but it has been a while since I have had to think programmatically. Everyone programming language as its own quirks. How they handle variable scoping, how they treat variables, numbers, and so on.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Week Two, Part 2</title>
      <link>https://ovieh.com/post/week2-2/</link>
      <pubDate>Sat, 26 Aug 2017 09:40:33 -0400</pubDate>
      <guid>https://ovieh.com/post/week2-2/</guid>
      <description>&lt;p&gt;I submitted my homework. I am not thrilled with my work. I spent many hours trying hacking away at the Bootstrap-Portfolio trying to format it to spec. My biggest isssue is that the breakpoints in our spec are not the same as the breakpoints that &lt;a href=&#34;https://getbootstrap.com/docs/4.0/layout/grid/&#34; title=&#34;Bootcamp link&#34;&gt;Bootstrap 4&lt;/a&gt; uses. The easiest way to have fixed this would have been to customized my own downloaded version of Bootstrap by using Sass, which is something that seemed overly complicated at the time. What I wound up doing was implementing media queries, something I did not initially want to implement, since it seems counter to the point of using Bootstrap.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Week Two</title>
      <link>https://ovieh.com/post/week-two/</link>
      <pubDate>Mon, 21 Aug 2017 17:30:30 -0400</pubDate>
      <guid>https://ovieh.com/post/week-two/</guid>
      <description>&lt;p&gt;This past week was spent learning the wonders of Responsive CSS. We spent a small amount of time learning&#xA;media queries, which is fine sense it’s a fairly simple concept. It just involves more hacking around, just with considerations for specific screen sizes. The first part of our homework was to refactor our week one Portfolio Site utilizing media queries. That in itself did not take too much time. The second part of the homework is to refactor the original site using Bootstrap 4. The first hiccup we had is that the instructor’s examples were all in Bootstrap 3. This led to a lot of confusion on my part, a lot of the&#xA;class names changed between versions. But going through the documentation led to some clarity. In some ways choosing to style your own CSS seems like an easier way to meet specific spec without having to deal with the decisions that our chosen framework, Bootstrap has chosen. But maybe with more experience&#xA;using this framework, the choices it makes will be familiar and I will be to use as more comfortable jumping off point. I am still completing the Bootstrap assignment. I&amp;rsquo;ll update this post with results once I have them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Week One</title>
      <link>https://ovieh.com/post/week-one/</link>
      <pubDate>Mon, 14 Aug 2017 20:45:44 -0400</pubDate>
      <guid>https://ovieh.com/post/week-one/</guid>
      <description>&lt;p&gt;I am really excited to start a new chapter in my life and puruse something&#xA;that I am passionate about. It has been a real treat to face challenges&#xA;and overcome them. Over the next 23 weeks I will transform myself into a Full Stack Developer.&lt;/p&gt;&#xA;&lt;h2 id=&#34;first-weeks-homework&#34;&gt;First Weeks Homework&lt;/h2&gt;&#xA;&lt;p&gt;My first project was to recrate a Personal Portfolio site from spec. It was a real drag getting all&#xA;the content to align, utilizing floats and then clearing the floats. I spent several hours hacking away, adding padding and margins,&#xA;to get everything as close to the spec as possible. Below I will link a screenshot of my final draft.&lt;/p&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>https://ovieh.com/page/about/</link>
      <pubDate>Fri, 04 Aug 2017 23:05:06 -0400</pubDate>
      <guid>https://ovieh.com/page/about/</guid>
      <description>&lt;p&gt;Ovieh is a London-based full-stack web developer with a strong knowledge of emerging technology and cutting-edge industry trends. The Detroit native possesses the grit and savvy to face challenges head on with out-the-box solutions. His natural knack for coding and processing complex systems combined with his experience with MERN stack result in high quality and high performing web applications. In his free time, Ovieh is an avid brewer and practices martial arts.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
