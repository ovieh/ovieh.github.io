<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Handlebars.js on Ovieh Mosley</title>
    <link>https://ovieh.com/tags/handlebars.js/</link>
    <description>Recent content in Handlebars.js on Ovieh Mosley</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sun, 03 Dec 2017 15:15:40 -0500</lastBuildDate>
    <atom:link href="https://ovieh.com/tags/handlebars.js/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Week Fifthteen</title>
      <link>https://ovieh.com/post/week-fifthteen/</link>
      <pubDate>Sun, 03 Dec 2017 15:15:40 -0500</pubDate>
      <guid>https://ovieh.com/post/week-fifthteen/</guid>
      <description>&lt;p&gt;This was a short week in terms of new material, as it was running concurrently with the planning of our second group project. We build off the knowledge we gained last week in building our own ORM, and used an off the shelf model, &lt;!-- raw HTML omitted --&gt;Sequelize&lt;!-- raw HTML omitted --&gt;. I found Sequelize itself to be pretty easy to use, since it is promise based. Dealing with callbacks can get messy. Our project this week was merely to refactor last week&amp;rsquo;s project, were we created are own ORM, using Sequelize.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Week Fourteen</title>
      <link>https://ovieh.com/post/week-fourteen/</link>
      <pubDate>Sun, 26 Nov 2017 10:20:22 -0500</pubDate>
      <guid>https://ovieh.com/post/week-fourteen/</guid>
      <description>&lt;p&gt;This week we dove deeper into Express and covered &lt;!-- raw HTML omitted --&gt;Handlebars.js&lt;!-- raw HTML omitted --&gt;, a html templating engine. HTML templating provides a bridge between our JavaScript and our content, allowing us to decouple our HTML structure of the data within. Handlebars provides pretty easy to understand syntax and even allows block expression. As an example, let say I had list of burgers I want to iterate through and add each burger as a list item, it would look like this:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
