<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React on Ovieh Mosley</title>
    <link>https://ovieh.com/tags/react/</link>
    <description>Recent content in React on Ovieh Mosley</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 13 May 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://ovieh.com/tags/react/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hooks &amp; More!</title>
      <link>https://ovieh.com/post/hooks/</link>
      <pubDate>Mon, 13 May 2019 00:00:00 +0000</pubDate>
      <guid>https://ovieh.com/post/hooks/</guid>
      <description>&lt;p&gt;I decided to create a &lt;!-- raw HTML omitted --&gt;project&lt;!-- raw HTML omitted --&gt; to familiarize myself with some newer additions to React. I built upon a previous full stack web app I created that uses Handlebars for the view layer. This new app uses some new features in React, such as Hooks and Concurrent React. The app scrapes the New York Times Technology page and displays a list of articles to user. It also allows the user to save articles and to comment on those articles. The backed uses MongoDB and Mongoose as ORM.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Final Project</title>
      <link>https://ovieh.com/post/final-project/</link>
      <pubDate>Mon, 26 Feb 2018 16:28:51 -0500</pubDate>
      <guid>https://ovieh.com/post/final-project/</guid>
      <description>&lt;p&gt;The remaining three weeks of class were mainly devoted to the development of our final projects. In that time we we also covered React in more depth and went over some some Computer Science fundamental, data structure and algorithms.&lt;/p&gt;&#xA;&lt;p&gt;I am not quite sure why I am so fond of React. Perhaps it feels like it gives needed structure to the front-end. And adding even more structure, we covered Redux. &lt;a href=&#34;https://redux.js.org/&#34;&gt;Redux&lt;/a&gt; provides a predictable state container for JavaScript apps. What that means is that handles the state for your entire application, it provides a &lt;em&gt;single source of truth&lt;/em&gt;. For something that is relatively simple, it is difficult to grasp exactly why you would need or want to use Redux. Through abstraction it provides predictable methods of accessing and modifying state. I would go on to use it along with React in my group’s final project.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Week Twenty</title>
      <link>https://ovieh.com/post/week-twenty/</link>
      <pubDate>Tue, 23 Jan 2018 14:41:23 -0500</pubDate>
      <guid>https://ovieh.com/post/week-twenty/</guid>
      <description>&lt;p&gt;This was our second week of covering React and one of our final weeks of learning new content. We covered the stuff necessary in making more featureful Single-Page Applications, AJAX calls, conditional rendering, and the use of React Router. As this was the final week before we began working on our Final Projects, the homework this week was optional. I am really glad I choose take it on.&lt;/p&gt;&#xA;&lt;p&gt;The previous week’s homework was considerably trivial use of React compared to this weeks. Going through the awesome &lt;a href=&#34;https://reactjs.org/&#34;&gt;Reactjs Docs&lt;/a&gt;, as a class, we pretty much covered everything that is in the Getting Started section. And it is pretty interesting that that is essentially it for React functionality.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Week Nineteen</title>
      <link>https://ovieh.com/post/week-nineteen/</link>
      <pubDate>Mon, 15 Jan 2018 16:27:56 -0500</pubDate>
      <guid>https://ovieh.com/post/week-nineteen/</guid>
      <description>&lt;p&gt;So this is where the fun started. React is such joy to work with. Having &lt;em&gt;once source for truth&lt;/em&gt; makes a lot sense. I have been picking up ES6 &amp;amp; ES7 features for a while now, and now its interesting seeing things like object destruturing and spread and rest used in a library. I really was not having much fun working on the front end, until now. I guess its the way that problems are approached, from Reacts perspective. And there&amp;rsquo;s something about keeping keeping a component&amp;rsquo;s markup, css, and logic in one place that I find really appealing. I can&amp;rsquo;t say exactly why.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
